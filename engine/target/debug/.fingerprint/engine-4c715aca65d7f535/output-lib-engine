{"$message_type":"diagnostic","message":"unused import: `crate::genmove::Square`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\board.rs","byte_start":105,"byte_end":127,"line_start":4,"line_end":4,"column_start":5,"column_end":27,"is_primary":true,"text":[{"text":"use crate::genmove::Square;","highlight_start":5,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\board.rs","byte_start":101,"byte_end":130,"line_start":4,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::genmove::Square;","highlight_start":1,"highlight_end":28},{"text":"use crate::coordinates::{square_to_array_indices, square_to_rank_file_enums, array_indices_to_square};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `crate::genmove::Square`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\board.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::genmove::Square;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `array_indices_to_square`, `square_to_array_indices`, and `square_to_rank_file_enums`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\board.rs","byte_start":155,"byte_end":178,"line_start":5,"line_end":5,"column_start":26,"column_end":49,"is_primary":true,"text":[{"text":"use crate::coordinates::{square_to_array_indices, square_to_rank_file_enums, array_indices_to_square};","highlight_start":26,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\board.rs","byte_start":180,"byte_end":205,"line_start":5,"line_end":5,"column_start":51,"column_end":76,"is_primary":true,"text":[{"text":"use crate::coordinates::{square_to_array_indices, square_to_rank_file_enums, array_indices_to_square};","highlight_start":51,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\board.rs","byte_start":207,"byte_end":230,"line_start":5,"line_end":5,"column_start":78,"column_end":101,"is_primary":true,"text":[{"text":"use crate::coordinates::{square_to_array_indices, square_to_rank_file_enums, array_indices_to_square};","highlight_start":78,"highlight_end":101}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\board.rs","byte_start":130,"byte_end":234,"line_start":5,"line_end":6,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::coordinates::{square_to_array_indices, square_to_rank_file_enums, array_indices_to_square};","highlight_start":1,"highlight_end":103},{"text":"use crate::error::{Error, FenParseError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `array_indices_to_square`, `square_to_array_indices`, and `square_to_rank_file_enums`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\board.rs:5:26\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::coordinates::{square_to_array_indices, square_to_rank_file_enums, array_indices_to_square};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `ColoredPiece`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\move_generation.rs","byte_start":136,"byte_end":148,"line_start":3,"line_end":3,"column_start":45,"column_end":57,"is_primary":true,"text":[{"text":"use crate::pieces::{Piece as PieceKindEnum, ColoredPiece};","highlight_start":45,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\move_generation.rs","byte_start":134,"byte_end":148,"line_start":3,"line_end":3,"column_start":43,"column_end":57,"is_primary":true,"text":[{"text":"use crate::pieces::{Piece as PieceKindEnum, ColoredPiece};","highlight_start":43,"highlight_end":57}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\move_generation.rs","byte_start":111,"byte_end":112,"line_start":3,"line_end":3,"column_start":20,"column_end":21,"is_primary":true,"text":[{"text":"use crate::pieces::{Piece as PieceKindEnum, ColoredPiece};","highlight_start":20,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\move_generation.rs","byte_start":148,"byte_end":149,"line_start":3,"line_end":3,"column_start":57,"column_end":58,"is_primary":true,"text":[{"text":"use crate::pieces::{Piece as PieceKindEnum, ColoredPiece};","highlight_start":57,"highlight_end":58}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `ColoredPiece`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\move_generation.rs:3:45\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::pieces::{Piece as PieceKindEnum, ColoredPiece};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `rank_file_enums_to_square`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\move_generation.rs","byte_start":301,"byte_end":326,"line_start":5,"line_end":5,"column_start":103,"column_end":128,"is_primary":true,"text":[{"text":"use crate::coordinates::{array_indices_to_square, square_to_array_indices, square_to_rank_file_enums, rank_file_enums_to_square};","highlight_start":103,"highlight_end":128}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\move_generation.rs","byte_start":299,"byte_end":326,"line_start":5,"line_end":5,"column_start":101,"column_end":128,"is_primary":true,"text":[{"text":"use crate::coordinates::{array_indices_to_square, square_to_array_indices, square_to_rank_file_enums, rank_file_enums_to_square};","highlight_start":101,"highlight_end":128}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `rank_file_enums_to_square`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\move_generation.rs:5:103\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::coordinates::{array_indices_to_square, square_to_array_indices, square_to_rank_file_enums, rank_file_enums_to_square};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::move_generation::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\lib.rs","byte_start":394,"byte_end":419,"line_start":21,"line_end":21,"column_start":9,"column_end":34,"is_primary":true,"text":[{"text":"pub use crate::move_generation::*;","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\lib.rs","byte_start":386,"byte_end":422,"line_start":21,"line_end":22,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use crate::move_generation::*;","highlight_start":1,"highlight_end":35},{"text":"  ","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `crate::move_generation::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:21:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use crate::move_generation::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `is_queen_attacking` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src\\move_generation.rs","byte_start":332,"byte_end":342,"line_start":7,"line_end":7,"column_start":1,"column_end":11,"is_primary":false,"text":[{"text":"impl Board {","highlight_start":1,"highlight_end":11}],"label":"method in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\move_generation.rs","byte_start":8582,"byte_end":8600,"line_start":186,"line_end":186,"column_start":19,"column_end":37,"is_primary":true,"text":[{"text":"    pub(crate) fn is_queen_attacking(&self, queen_sq: Square, target_sq: Square) -> bool {","highlight_start":19,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: method `is_queen_attacking` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\move_generation.rs:186:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Board {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmethod in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn is_queen_attacking(&self, queen_sq: Square, target_sq: Square) -> bool {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"non-local `impl` definition, `impl` blocks should be written at the same level as their item","code":{"code":"non_local_definitions","explanation":null},"level":"warning","spans":[{"file_name":"src\\error.rs","byte_start":79,"byte_end":92,"line_start":5,"line_end":5,"column_start":10,"column_end":23,"is_primary":false,"text":[{"text":"pub enum FenParseError {","highlight_start":10,"highlight_end":23}],"label":"`FenParseError` is not local","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\error.rs","byte_start":47,"byte_end":51,"line_start":4,"line_end":4,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug, Fail, PartialEq, Eq)]","highlight_start":24,"highlight_end":28}],"label":"`Fail` is not local","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\error.rs","byte_start":47,"byte_end":51,"line_start":4,"line_end":4,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug, Fail, PartialEq, Eq)]","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Fail)]","def_site_span":{"file_name":"C:\\Users\\ADMIN\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\synstructure-0.12.6\\src\\macros.rs","byte_start":2861,"byte_end":2961,"line_start":94,"line_end":96,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        pub fn $derives(","highlight_start":9,"highlight_end":25},{"text":"            i: $crate::macros::TokenStream","highlight_start":1,"highlight_end":43},{"text":"        ) -> $crate::macros::TokenStream {","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src\\error.rs","byte_start":47,"byte_end":51,"line_start":4,"line_end":4,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug, Fail, PartialEq, Eq)]","highlight_start":24,"highlight_end":28}],"label":"move the `impl` block outside of this constant `_DERIVE_failure_Fail_FOR_FenParseError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\error.rs","byte_start":47,"byte_end":51,"line_start":4,"line_end":4,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug, Fail, PartialEq, Eq)]","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Fail)]","def_site_span":{"file_name":"C:\\Users\\ADMIN\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\synstructure-0.12.6\\src\\macros.rs","byte_start":2861,"byte_end":2961,"line_start":94,"line_end":96,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        pub fn $derives(","highlight_start":9,"highlight_end":25},{"text":"            i: $crate::macros::TokenStream","highlight_start":1,"highlight_end":43},{"text":"        ) -> $crate::macros::TokenStream {","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src\\error.rs","byte_start":47,"byte_end":47,"line_start":4,"line_end":4,"column_start":24,"column_end":24,"is_primary":true,"text":[{"text":"#[derive(Clone, Debug, Fail, PartialEq, Eq)]","highlight_start":24,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\error.rs","byte_start":47,"byte_end":51,"line_start":4,"line_end":4,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug, Fail, PartialEq, Eq)]","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Fail)]","def_site_span":{"file_name":"C:\\Users\\ADMIN\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\synstructure-0.12.6\\src\\macros.rs","byte_start":2861,"byte_end":2961,"line_start":94,"line_end":96,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        pub fn $derives(","highlight_start":9,"highlight_end":25},{"text":"            i: $crate::macros::TokenStream","highlight_start":1,"highlight_end":43},{"text":"        ) -> $crate::macros::TokenStream {","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the derive macro `Fail` defines the non-local `impl`, and may need to be changed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Fail` may come from an old version of the `failure_derive` crate, try updating your dependency with `cargo update -p failure_derive`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"an `impl` is never scoped, even when it is nested inside an item, as it may impact type checking outside of that item, which can be the case if neither the trait or the self type are at the same nesting level as the `impl`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"items in an anonymous const item (`const _: () = { ... }`) are treated as in the same scope as the anonymous const's declaration for the purpose of this lint","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(non_local_definitions)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: non-local `impl` definition, `impl` blocks should be written at the same level as their item\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\error.rs:4:24\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Clone, Debug, Fail, PartialEq, Eq)]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m`Fail` is not local\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmove the `impl` block outside of this constant `_DERIVE_failure_Fail_FOR_FenParseError`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum FenParseError {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m`FenParseError` is not local\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the derive macro `Fail` defines the non-local `impl`, and may need to be changed\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the derive macro `Fail` may come from an old version of the `failure_derive` crate, try updating your dependency with `cargo update -p failure_derive`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: an `impl` is never scoped, even when it is nested inside an item, as it may impact type checking outside of that item, which can be the case if neither the trait or the self type are at the same nesting level as the `impl`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: items in an anonymous const item (`const _: () = { ... }`) are treated as in the same scope as the anonymous const's declaration for the purpose of this lint\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(non_local_definitions)]` on by default\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the derive macro `Fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"non-local `impl` definition, `impl` blocks should be written at the same level as their item","code":{"code":"non_local_definitions","explanation":null},"level":"warning","spans":[{"file_name":"src\\error.rs","byte_start":79,"byte_end":92,"line_start":5,"line_end":5,"column_start":10,"column_end":23,"is_primary":false,"text":[{"text":"pub enum FenParseError {","highlight_start":10,"highlight_end":23}],"label":"`FenParseError` is not local","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\error.rs","byte_start":47,"byte_end":51,"line_start":4,"line_end":4,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug, Fail, PartialEq, Eq)]","highlight_start":24,"highlight_end":28}],"label":"`Display` is not local","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\error.rs","byte_start":47,"byte_end":51,"line_start":4,"line_end":4,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug, Fail, PartialEq, Eq)]","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Fail)]","def_site_span":{"file_name":"C:\\Users\\ADMIN\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\synstructure-0.12.6\\src\\macros.rs","byte_start":2861,"byte_end":2961,"line_start":94,"line_end":96,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        pub fn $derives(","highlight_start":9,"highlight_end":25},{"text":"            i: $crate::macros::TokenStream","highlight_start":1,"highlight_end":43},{"text":"        ) -> $crate::macros::TokenStream {","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src\\error.rs","byte_start":47,"byte_end":51,"line_start":4,"line_end":4,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug, Fail, PartialEq, Eq)]","highlight_start":24,"highlight_end":28}],"label":"move the `impl` block outside of this constant `_DERIVE_failure_core_fmt_Display_FOR_FenParseError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\error.rs","byte_start":47,"byte_end":51,"line_start":4,"line_end":4,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug, Fail, PartialEq, Eq)]","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Fail)]","def_site_span":{"file_name":"C:\\Users\\ADMIN\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\synstructure-0.12.6\\src\\macros.rs","byte_start":2861,"byte_end":2961,"line_start":94,"line_end":96,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        pub fn $derives(","highlight_start":9,"highlight_end":25},{"text":"            i: $crate::macros::TokenStream","highlight_start":1,"highlight_end":43},{"text":"        ) -> $crate::macros::TokenStream {","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src\\error.rs","byte_start":47,"byte_end":47,"line_start":4,"line_end":4,"column_start":24,"column_end":24,"is_primary":true,"text":[{"text":"#[derive(Clone, Debug, Fail, PartialEq, Eq)]","highlight_start":24,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\error.rs","byte_start":47,"byte_end":51,"line_start":4,"line_end":4,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug, Fail, PartialEq, Eq)]","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Fail)]","def_site_span":{"file_name":"C:\\Users\\ADMIN\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\synstructure-0.12.6\\src\\macros.rs","byte_start":2861,"byte_end":2961,"line_start":94,"line_end":96,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        pub fn $derives(","highlight_start":9,"highlight_end":25},{"text":"            i: $crate::macros::TokenStream","highlight_start":1,"highlight_end":43},{"text":"        ) -> $crate::macros::TokenStream {","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the derive macro `Fail` defines the non-local `impl`, and may need to be changed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Fail` may come from an old version of the `failure_derive` crate, try updating your dependency with `cargo update -p failure_derive`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"an `impl` is never scoped, even when it is nested inside an item, as it may impact type checking outside of that item, which can be the case if neither the trait or the self type are at the same nesting level as the `impl`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"items in an anonymous const item (`const _: () = { ... }`) are treated as in the same scope as the anonymous const's declaration for the purpose of this lint","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: non-local `impl` definition, `impl` blocks should be written at the same level as their item\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\error.rs:4:24\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Clone, Debug, Fail, PartialEq, Eq)]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m`Display` is not local\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmove the `impl` block outside of this constant `_DERIVE_failure_core_fmt_Display_FOR_FenParseError`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum FenParseError {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m`FenParseError` is not local\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the derive macro `Fail` defines the non-local `impl`, and may need to be changed\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the derive macro `Fail` may come from an old version of the `failure_derive` crate, try updating your dependency with `cargo update -p failure_derive`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: an `impl` is never scoped, even when it is nested inside an item, as it may impact type checking outside of that item, which can be the case if neither the trait or the self type are at the same nesting level as the `impl`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: items in an anonymous const item (`const _: () = { ... }`) are treated as in the same scope as the anonymous const's declaration for the purpose of this lint\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the derive macro `Fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"non-local `impl` definition, `impl` blocks should be written at the same level as their item","code":{"code":"non_local_definitions","explanation":null},"level":"warning","spans":[{"file_name":"src\\error.rs","byte_start":1103,"byte_end":1108,"line_start":28,"line_end":28,"column_start":10,"column_end":15,"is_primary":false,"text":[{"text":"pub enum Error {","highlight_start":10,"highlight_end":15}],"label":"`Error` is not local","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\error.rs","byte_start":1086,"byte_end":1090,"line_start":27,"line_end":27,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug, Fail)]","highlight_start":24,"highlight_end":28}],"label":"`Fail` is not local","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\error.rs","byte_start":1086,"byte_end":1090,"line_start":27,"line_end":27,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug, Fail)]","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Fail)]","def_site_span":{"file_name":"C:\\Users\\ADMIN\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\synstructure-0.12.6\\src\\macros.rs","byte_start":2861,"byte_end":2961,"line_start":94,"line_end":96,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        pub fn $derives(","highlight_start":9,"highlight_end":25},{"text":"            i: $crate::macros::TokenStream","highlight_start":1,"highlight_end":43},{"text":"        ) -> $crate::macros::TokenStream {","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src\\error.rs","byte_start":1086,"byte_end":1090,"line_start":27,"line_end":27,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug, Fail)]","highlight_start":24,"highlight_end":28}],"label":"move the `impl` block outside of this constant `_DERIVE_failure_Fail_FOR_Error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\error.rs","byte_start":1086,"byte_end":1090,"line_start":27,"line_end":27,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug, Fail)]","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Fail)]","def_site_span":{"file_name":"C:\\Users\\ADMIN\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\synstructure-0.12.6\\src\\macros.rs","byte_start":2861,"byte_end":2961,"line_start":94,"line_end":96,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        pub fn $derives(","highlight_start":9,"highlight_end":25},{"text":"            i: $crate::macros::TokenStream","highlight_start":1,"highlight_end":43},{"text":"        ) -> $crate::macros::TokenStream {","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src\\error.rs","byte_start":1086,"byte_end":1086,"line_start":27,"line_end":27,"column_start":24,"column_end":24,"is_primary":true,"text":[{"text":"#[derive(Clone, Debug, Fail)]","highlight_start":24,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\error.rs","byte_start":1086,"byte_end":1090,"line_start":27,"line_end":27,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug, Fail)]","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Fail)]","def_site_span":{"file_name":"C:\\Users\\ADMIN\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\synstructure-0.12.6\\src\\macros.rs","byte_start":2861,"byte_end":2961,"line_start":94,"line_end":96,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        pub fn $derives(","highlight_start":9,"highlight_end":25},{"text":"            i: $crate::macros::TokenStream","highlight_start":1,"highlight_end":43},{"text":"        ) -> $crate::macros::TokenStream {","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the derive macro `Fail` defines the non-local `impl`, and may need to be changed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Fail` may come from an old version of the `failure_derive` crate, try updating your dependency with `cargo update -p failure_derive`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"an `impl` is never scoped, even when it is nested inside an item, as it may impact type checking outside of that item, which can be the case if neither the trait or the self type are at the same nesting level as the `impl`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"items in an anonymous const item (`const _: () = { ... }`) are treated as in the same scope as the anonymous const's declaration for the purpose of this lint","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: non-local `impl` definition, `impl` blocks should be written at the same level as their item\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\error.rs:27:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Clone, Debug, Fail)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m`Fail` is not local\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmove the `impl` block outside of this constant `_DERIVE_failure_Fail_FOR_Error`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum Error {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m`Error` is not local\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the derive macro `Fail` defines the non-local `impl`, and may need to be changed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the derive macro `Fail` may come from an old version of the `failure_derive` crate, try updating your dependency with `cargo update -p failure_derive`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: an `impl` is never scoped, even when it is nested inside an item, as it may impact type checking outside of that item, which can be the case if neither the trait or the self type are at the same nesting level as the `impl`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: items in an anonymous const item (`const _: () = { ... }`) are treated as in the same scope as the anonymous const's declaration for the purpose of this lint\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the derive macro `Fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"non-local `impl` definition, `impl` blocks should be written at the same level as their item","code":{"code":"non_local_definitions","explanation":null},"level":"warning","spans":[{"file_name":"src\\error.rs","byte_start":1103,"byte_end":1108,"line_start":28,"line_end":28,"column_start":10,"column_end":15,"is_primary":false,"text":[{"text":"pub enum Error {","highlight_start":10,"highlight_end":15}],"label":"`Error` is not local","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\error.rs","byte_start":1086,"byte_end":1090,"line_start":27,"line_end":27,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug, Fail)]","highlight_start":24,"highlight_end":28}],"label":"`Display` is not local","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\error.rs","byte_start":1086,"byte_end":1090,"line_start":27,"line_end":27,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug, Fail)]","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Fail)]","def_site_span":{"file_name":"C:\\Users\\ADMIN\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\synstructure-0.12.6\\src\\macros.rs","byte_start":2861,"byte_end":2961,"line_start":94,"line_end":96,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        pub fn $derives(","highlight_start":9,"highlight_end":25},{"text":"            i: $crate::macros::TokenStream","highlight_start":1,"highlight_end":43},{"text":"        ) -> $crate::macros::TokenStream {","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src\\error.rs","byte_start":1086,"byte_end":1090,"line_start":27,"line_end":27,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug, Fail)]","highlight_start":24,"highlight_end":28}],"label":"move the `impl` block outside of this constant `_DERIVE_failure_core_fmt_Display_FOR_Error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\error.rs","byte_start":1086,"byte_end":1090,"line_start":27,"line_end":27,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug, Fail)]","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Fail)]","def_site_span":{"file_name":"C:\\Users\\ADMIN\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\synstructure-0.12.6\\src\\macros.rs","byte_start":2861,"byte_end":2961,"line_start":94,"line_end":96,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        pub fn $derives(","highlight_start":9,"highlight_end":25},{"text":"            i: $crate::macros::TokenStream","highlight_start":1,"highlight_end":43},{"text":"        ) -> $crate::macros::TokenStream {","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src\\error.rs","byte_start":1086,"byte_end":1086,"line_start":27,"line_end":27,"column_start":24,"column_end":24,"is_primary":true,"text":[{"text":"#[derive(Clone, Debug, Fail)]","highlight_start":24,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\error.rs","byte_start":1086,"byte_end":1090,"line_start":27,"line_end":27,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Clone, Debug, Fail)]","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Fail)]","def_site_span":{"file_name":"C:\\Users\\ADMIN\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\synstructure-0.12.6\\src\\macros.rs","byte_start":2861,"byte_end":2961,"line_start":94,"line_end":96,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        pub fn $derives(","highlight_start":9,"highlight_end":25},{"text":"            i: $crate::macros::TokenStream","highlight_start":1,"highlight_end":43},{"text":"        ) -> $crate::macros::TokenStream {","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the derive macro `Fail` defines the non-local `impl`, and may need to be changed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the derive macro `Fail` may come from an old version of the `failure_derive` crate, try updating your dependency with `cargo update -p failure_derive`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"an `impl` is never scoped, even when it is nested inside an item, as it may impact type checking outside of that item, which can be the case if neither the trait or the self type are at the same nesting level as the `impl`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"items in an anonymous const item (`const _: () = { ... }`) are treated as in the same scope as the anonymous const's declaration for the purpose of this lint","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: non-local `impl` definition, `impl` blocks should be written at the same level as their item\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\error.rs:27:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Clone, Debug, Fail)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m`Display` is not local\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmove the `impl` block outside of this constant `_DERIVE_failure_core_fmt_Display_FOR_Error`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum Error {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m`Error` is not local\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the derive macro `Fail` defines the non-local `impl`, and may need to be changed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the derive macro `Fail` may come from an old version of the `failure_derive` crate, try updating your dependency with `cargo update -p failure_derive`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: an `impl` is never scoped, even when it is nested inside an item, as it may impact type checking outside of that item, which can be the case if neither the trait or the self type are at the same nesting level as the `impl`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: items in an anonymous const item (`const _: () = { ... }`) are treated as in the same scope as the anonymous const's declaration for the purpose of this lint\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the derive macro `Fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"10 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: 10 warnings emitted\u001b[0m\n\n"}
